name: Deploy API

on:
  pull_request:
    paths:
      - src/api/**
    branches: [master]
  push:
    paths:
      - src/api/**
    branches: [master]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up AWS SAM
        run: util/install_sam.sh || util/upgrade_sam.sh

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --ignore=F405,W503,W504,E721 --max-complexity=10 --max-line-length=127 --statistics

      - name: Run all unit tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          S3_BUCKET: ${{ secrets.HYPERDRIVE_DEV_BUCKET }}
          TABLE_NAME: users-local
          TEST: true
          STAGE: dev
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          SALT: salt
          CRYPT_PASS: password
          EMIT_SECRET: secret
          SIGNAL_EMAIL: ${{ secrets.SIGNAL_EMAIL }}
          STRIPE_WEBHOOK_SECRET: secret
          STRIPE_PRICE_ID: ${{ secrets.DEV_STRIPE_PRICE_ID }}
          STRIPE_SECRET_KEY: ${{ secrets.DEV_STRIPE_SECRET_KEY }}
        run: npm run test:api+db

      - name: Create parameters.env [${{ fromJSON('["dev","prod"]')[github.ref_name == 'master'] }}]
        env:
          EmailUser: ${{ secrets.EMAIL_USER }}
          SignalEmail: ${{ secrets.SIGNAL_EMAIL }}
          EmailPass: ${{ secrets.EMAIL_PASS }}
          StripePriceId: ${{ fromJSON(format('["{0}","{1}"]', secrets.DEV_STRIPE_PRICE_ID, secrets.STRIPE_PRICE_ID))[github.ref_name == 'master'] }}
          StripeSecretKey: ${{ fromJSON(format('["{0}","{1}"]', secrets.DEV_STRIPE_SECRET_KEY, secrets.STRIPE_SECRET_KEY))[github.ref_name == 'master'] }}
          # Webhook signing key secret for endpoint (not for CLI)
          StripeWebhookSecret: ${{ fromJSON(format('["{0}","{1}"]', secrets.DEV_STRIPE_WEBHOOK_SECRET, secrets.STRIPE_WEBHOOK_SECRET))[github.ref_name == 'master'] }}
          S3Bucket: ${{ fromJSON(format('["{0}","{1}"]', secrets.HYPERDRIVE_DEV_BUCKET, secrets.HYPERDRIVE_BUCKET))[github.ref_name == 'master'] }}
          Stage: ${{ fromJSON(format('["{0}","{1}"]', 'dev', 'prod'))[github.ref_name == 'master'] }}
          CertArn: ${{ fromJSON(format('["{0}","{1}"]', secrets.DEV_CERT_ARN, secrets.CERT_ARN))[github.ref_name == 'master'] }}
          HostedZoneId: ${{ secrets.HOSTED_ZONE_ID }}
          UserPoolArn: ${{ fromJSON(format('["{0}","{1}"]', secrets.DEV_USER_POOL_ARN, secrets.USER_POOL_ARN))[github.ref_name == 'master'] }}
          UserPoolId: ${{ fromJSON(format('["{0}","{1}"]', secrets.DEV_USER_POOL_ID, secrets.USER_POOL_ID))[github.ref_name == 'master'] }}
          WebClientId: ${{ fromJSON(format('["{0}","{1}"]', secrets.DEV_WEB_CLIENT_ID, secrets.WEB_CLIENT_ID))[github.ref_name == 'master'] }}
          Salt: ${{ secrets.SALT }}
          RHUsername: ${{ secrets.RH_USERNAME }}
          RHPassword: ${{ secrets.CRYPT_PASS }}
          RH2FA: ${{ secrets.RH_2FA}}
          RHUsername2: ${{ secrets.RH_USERNAME2 }}
          RHPassword2: ${{ secrets.RH_PASSWORD2 }}
          RH2FA2: ${{ secrets.RH_2FA2}}
          EmitSecret: ${{ fromJSON(format('["{0}","{1}"]', secrets.DEV_EMIT_SECRET, secrets.EMIT_SECRET))[github.ref_name == 'master'] }}
          FILE_PREFIX: ${{ fromJSON('["dev-",""]')[github.ref_name == 'master'] }}
        run: |
          echo "
          Domain=$(basename ${GITHUB_REPOSITORY})
          EmailUser=${EmailUser}
          SignalEmail=${SignalEmail}
          EmailPass=${EmailPass}
          StripePriceId=${StripePriceId}
          StripeSecretKey=${StripeSecretKey}
          StripeWebhookSecret=${StripeWebhookSecret}
          S3Bucket=${S3Bucket}
          Stage=${Stage}
          CertArn=${CertArn}
          HostedZoneId=${HostedZoneId}
          UserPoolId=${UserPoolId}
          WebClientId=${WebClientId}
          UserPoolArn=${UserPoolArn}
          Salt=${Salt}
          RHUsername=${RHUsername}
          RHPassword=${RHPassword}
          RH2FA=${RH2FA}
          RHUsername2=${RHUsername2}
          RHPassword2=${RHPassword2}
          RH2FA2=${RH2FA2}
          EmitSecret=${EmitSecret}
          " >> src/api/${FILE_PREFIX}parameters.env

      - name: Build API
        run: npm run build:api

      - name: Deploy API [${{ fromJSON('["dev","prod"]')[github.ref_name == 'master'] }}]
        run: npm run deploy${CMD_POSTFIX}:api
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CMD_POSTFIX: ${{ fromJSON('["-dev",""]')[github.ref_name == 'master'] }}
